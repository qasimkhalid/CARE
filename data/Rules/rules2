[RouteAssignment_Normal_PersonsWhoAreAlone:
    (?person1 rdf:type foaf:Person)
 	(?person1 sbevac:isLocatedIn ?section1)
 	(?section1 rdf:type seas:BuildingSpace)

    (?person2 rdf:type foaf:Person)
    (?person2 sbevac:needsSupervision "True"^^xsd:boolean)
    
    notEqual(?person1,?person2)

    (?section2 rdf:type seas:BuildingSpace)
    (?person3 rdf:type foaf:Person)
    (?section2 sbevac:isNotAccessibleTo ?person3)

    notEqual(?person1,?person3)

 	(?route1 sbevac:isAvailable "True"^^xsd:boolean)
 	(?route1 sbevac:startsfrom ?section1)
 	(?route1 sbevac:hasPath ?path1)
 	listContains(?path1, ?section2)

 	(?route2 sbevac:isAvailable "True"^^xsd:boolean)
    (?route2 sbevac:startsfrom ?section1)
 	(?route2 sbevac:hasPath ?path2)
 	listNotContains(?path2, ?section2)

    ->
    (?person1 sbevac:routesNotPossible ?route1)
    (?person1 sbevac:routesPossible ?route2)
]

[RouteAssignment_Normal_PersonsHavingInaccessibilityToSomeSpaces:
    (?person1 rdf:type foaf:Person)
 	(?person1 sbevac:isLocatedIn ?section1)
 	(?section1 rdf:type seas:BuildingSpace)

    (?section2 sbevac:isNotAccessibleTo ?person1)
    (?section2 rdf:type seas:BuildingSpace)
    notEqual(?section1,?section2)

 	(?route1 sbevac:isAvailable "True"^^xsd:boolean)
 	(?route1 sbevac:startsfrom ?section1)
 	(?route1 sbevac:hasPath ?path1)
 	listContains(?path1, ?section2)

 	(?route2 sbevac:isAvailable "True"^^xsd:boolean)
    (?route2 sbevac:startsfrom ?section1)
 	(?route2 sbevac:hasPath ?path2)
 	listNotContains(?path2, ?section2)

    ->
    (?person1 sbevac:routesNotPossible ?route1)
    (?person1 sbevac:routesPossible ?route2)
]